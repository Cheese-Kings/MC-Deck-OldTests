"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nbtParser = exports.rotationParser = exports.coordinatesParser = exports.arrayToArgsParser = void 0;
const util_1 = __importDefault(require("util"));
const Coordinates_1 = require("./Coordinates");
// PARSERS
function arrayToArgsParser(args) {
    if (Array.isArray(args) && args.length === 3) {
        return new Coordinates_1.VectorClass(args.map((arg) => arg.toString()));
    }
    return args;
}
exports.arrayToArgsParser = arrayToArgsParser;
function coordinatesParser(coordinates) {
    if (Array.isArray(coordinates) && coordinates.length === 3 && coordinates.every((c) => typeof c === 'string')) {
        return new Coordinates_1.VectorClass(coordinates);
    }
    return coordinates;
}
exports.coordinatesParser = coordinatesParser;
function rotationParser(rotation) {
    if (Array.isArray(rotation) && rotation.length === 2 && rotation.every((r) => typeof r === 'string')) {
        return new Coordinates_1.VectorClass(rotation);
    }
    return rotation;
}
exports.rotationParser = rotationParser;
const nbtParser = (nbt) => util_1.default.inspect(nbt, {
    depth: null,
    showHidden: false,
    compact: true,
    maxArrayLength: null,
    maxStringLength: null,
    breakLength: Infinity,
    colors: false,
});
exports.nbtParser = nbtParser;
//# sourceMappingURL=parsers.js.map