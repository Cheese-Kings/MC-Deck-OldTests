import type { LiteralUnion } from "../../generalTypes";
import type { ITEMS, MultiplePlayersArgument } from "../../arguments/index";
import { Command } from "../Command";
/** Gives or takes (unlocks or locks) recipes for players. */
export declare class RecipeCommand extends Command {
    /**
     * Gives recipes to the player.
     *
     * @param targets Specifies the player(s) to give the recipe to.
     * @param recipe Specifies a recipe to give. If `*` is specified, then all recipes will be given.
    */
    give: (targets: MultiplePlayersArgument, recipe: LiteralUnion<'*' | ITEMS>) => void;
    /**
     * Takes recipes to the player.
     *
     * @param targets Specifies the player(s) to take the recipe from.
     * @param recipe Specifies a recipe to take. If `*` is specified, then all recipes will be taken.
    */
    take: (targets: MultiplePlayersArgument, recipe: LiteralUnion<'*' | ITEMS>) => void;
}
