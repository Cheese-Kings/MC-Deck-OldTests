"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Time = void 0;
const Command_1 = require("../Command");
const decorators_1 = require("../decorators");
/**
 * Changes or queries the world's game time.
 */
class Time extends Command_1.Command {
    constructor() {
        super(...arguments);
        /**
         * Adds `time` to the in-game daytime.
         *
         * @param time the time to add. It can be suffixed with a unit. Units include:
         * - `d`: an in-game day, 24000 gameticks;
         * - `s`: a second, 20 gameticks;
         * - `t` (default and omitable): a single gametick; the default unit.
         */
        this.add = (time) => { };
        /**
         * Queries current time.
         *
         * @param type Specifies the time to query. Can be one of the following:
         * - `daytime`: the number of game ticks since dawn. (the in-game daytime modulo 24000)
         * - `gametime`: the age of the world in game ticks. (the game time modulo 2147483647)
         * - `day`: the number of in-game days passed. (the in-game daytime divided by 24000, then modulo 2147483647)
         */
        this.query = (type) => { };
        /**
         * Sets the in-game daytime.
         *
         * @param time the new daytime. It can be suffixed with a unit. Units include:
         * - `d`: an in-game day, 24000 gameticks;
         * - `s`: a second, 20 gameticks;
         * - `t` (default and omitable): a single gametick; the default unit.
         */
        this.set = (time) => { };
    }
}
__decorate([
    decorators_1.command(['time', 'add'], { isRoot: true }),
    __metadata("design:type", Object)
], Time.prototype, "add", void 0);
__decorate([
    decorators_1.command(['time', 'query'], { isRoot: true }),
    __metadata("design:type", Object)
], Time.prototype, "query", void 0);
__decorate([
    decorators_1.command(['time', 'set'], { isRoot: true }),
    __metadata("design:type", Object)
], Time.prototype, "set", void 0);
exports.Time = Time;
//# sourceMappingURL=Time.js.map