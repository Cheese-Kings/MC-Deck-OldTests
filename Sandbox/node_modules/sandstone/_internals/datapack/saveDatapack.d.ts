import type { ResourcesTree } from "./resourcesTree";
export declare type SaveOptions = {
    /**
     * The location of the `.minecraft` folder.
     * If unspecified, the location of the `.minecraft` folder will be automatically discovered.
     */
    minecraftPath?: string;
    /**
     * If true, will display the resulting commands in the console.
     *
     * @default false
     */
    verbose?: boolean;
    /**
     * If true, then nothing will actually be saved to the file system.
     *
     * Used with `verbose`, you can use this option to only print the results of your functions, without saving anything.
     */
    dryRun?: boolean;
    /**
     * Pack description.
     */
    description?: string;
} & ({
    /**
     * Whether to put the datapack in the .minecraft/datapacks folder, or not.
     *
     * Incompatible with the `world` parameter.
     */
    asRootDatapack?: boolean;
} | {
    /**
     * The name of the world to save the datapack in.
     * If unspecified, the datapack will be saved to the current folder.
     *
     * Incompatible with the `asRootDatapack` folder.
     */
    world?: string;
});
/**
 * Saves the datapack to the file system.
 *
 * @param functions A mapping between function full names and their commands.
 * @param name The name of the Datapack
 * @param options The save options.
 */
export declare function saveDatapack(resources: ResourcesTree, name: string, options: SaveOptions): void;
