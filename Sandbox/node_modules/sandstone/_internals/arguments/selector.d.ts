import type { SelectorClass } from "../variables/index";
import type { _ShowAlias } from "./basics";
declare type MultipleEntitiesSelector = SelectorClass<false, false>;
declare type SingleEntitySelector = SelectorClass<true, false>;
declare type MultiplePlayersSelector = SelectorClass<false, true>;
declare type SinglePlayerSelector = SelectorClass<true, true>;
export declare type SelectorArgument<MustBeSingle extends boolean, MustBePlayer extends boolean = false> = string | (MustBePlayer extends true ? (SinglePlayerSelector | (MustBeSingle extends false ? MultiplePlayersSelector : never)) : (SingleEntitySelector | (MustBeSingle extends false ? MultipleEntitiesSelector : never)));
export declare type SinglePlayerArgument = SelectorArgument<true, true> | _ShowAlias;
export declare type MultiplePlayersArgument = SelectorArgument<false, true> | SinglePlayerArgument | _ShowAlias;
export declare type SingleEntityArgument = SelectorArgument<true, false> | SinglePlayerArgument | _ShowAlias;
export declare type MultipleEntitiesArgument = SelectorArgument<false, false> | SingleEntityArgument | MultiplePlayersArgument | _ShowAlias;
export {};
