import type { AdvancementType, MultiplePlayersArgument } from "../arguments/index";
import type { CommandsRoot } from "../commands/index";
export declare class Advancement<CriteriaNames extends string> {
    private commandsRoot;
    private path;
    private advancementJson;
    constructor(commandsRoot: CommandsRoot, name: string, advancement: AdvancementType<CriteriaNames>);
    get name(): string;
    /**
     * Grant this achievement to the players.
     */
    grant(players: MultiplePlayersArgument, criterion?: CriteriaNames): void;
    /**
     * Revoke this achievement from the players.
     */
    revoke(players: MultiplePlayersArgument, criterion?: CriteriaNames): void;
    /**
     * Grant all achievements until this one to the players.
     */
    grantUntilThis(players: MultiplePlayersArgument): void;
    /**
     * Revoke all achievements until this one from the players.
     */
    revokeUntilThis(players: MultiplePlayersArgument): void;
    /**
     * Grant all achievements from this one to the players.
     */
    grantFromThis(players: MultiplePlayersArgument): void;
    /**
     * Revoke all achievements from this one from the players.
     */
    revokeFromThis(players: MultiplePlayersArgument): void;
}
